/*
-- 1. employee2 테이블에 (106, '양신입', 25, null, 30)을 삽입하시오. -- 에러 이유?
-- 2. 급여가 400만원 이상이고 부서번호가 10인 사원을 검색하시오.
-- 3. 급여가 많은 순으로 정렬하시오.
-- 4. 급여가 없는 사원을 검색하시오.
-- 5. 사원의 총인원을 구하시오.
-- 6. 사원의 급여 총액과 급여 평균을 구하시오.
-- 7. 사원의 총인원, 급여 총액과 급여 평균을 구하시오.
-- 8. 부서별 급여 총액을 구하시오.
-- 9. 부서이름을 포함한 사원의 모든 정보(부서아이디, 부서이름, 사원아이디, 사원이름, 사원 나이, 월급)를 검색하시오(동등조인)
-- 10. 부서이름을 포함한 사원의 모든 정보(부서아이디, 부서이름, 사원아이디, 사원이름, 사원 나이, 월급)를 검색하시오(내부조인)
-- 11. 부서이름을 포함한 사원의 모든 정보(부서아이디, 부서이름, 사원아이디, 사원이름, 사원 나이, 월급)를 검색하시오(join ~ using)
-- 12. 부서아이디별, 부서이름별 급여 총액, 평균
-- 13. 부서아이디별, 부서이름별 급여 총액, 평균(ROLLUP 이용해서)
-- 14. 최고 급여와 최저 급여를 받는 사원의 정보를 검색하시오
-- 15. '백두산' 사원의 급여를 430만원으로 수정하세요.
-- 16. 사원의 급여 순위를 구하시오
*/

-- 1. employee2 테이블에 (106, '양신입', 25, null, 30)을 삽입하시오. -- 에러 이유?
INSERT INTO employee2_3 VALUES (106, '양신입', 25, null, 30); -- 부모키가 없음

-- 2. 급여가 400만원 이상이고 부서번호가 10인 사원을 검색하시오.
SELECT *
FROM department2_3 a, employee2_3 b
WHERE a.deptid = b.deptid AND b.sal >= 4000000 AND a.deptid = 10;

-- 3. 급여가 많은 순으로 정렬하시오.
SELECT *
FROM employee2_3
    ORDER BY sal desc;
    
-- 4. 급여가 없는 사원을 검색하시오.
SELECT *
FROM employee2_3
WHERE sal IS NULL;

-- 5. 사원의 총인원을 구하시오.
SELECT COUNT(*) 총인원
FROM employee2_3;

-- 6. 사원의 급여 총액과 급여 평균을 구하시오.
SELECT  SUM(sal) 급여총액, 
        AVG(sal) 급여평균
FROM employee2_3;

-- 7. 사원의 총인원, 급여 총액과 급여 평균을 구하시오.
SELECT  COUNT(*) 총인원,
        SUM(sal) 급여총액, 
        AVG(sal) 급여평균
FROM employee2_3;

-- 8. 부서별 급여 총액을 구하시오.
SELECT a.deptid, a.deptname, SUM(b.sal)
FROM department2_3 a, employee2_3 b
WHERE a.deptid = b.deptid
GROUP BY a.deptid, a.deptname;

-- 9. 부서이름을 포함한 사원의 모든 정보(부서아이디, 부서이름, 사원아이디, 사원이름, 사원 나이, 월급)를 검색하시오(동등조인)
